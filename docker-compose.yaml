version: '3.8'
services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - db:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - web_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:latest
    env_file:
      - ./.env
    ports:
      - "6379:6379"
    networks:
      - web_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 100

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - web_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src/
      - celery-data:/uploads/
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    networks:
      - web_network

  celery:
    container_name: "celery"
    build:
      context: .
      dockerfile: ./src/celery/Dockerfile
    command: celery -A tasks worker --loglevel=INFO --pool=solo
    env_file:
      - .env
    volumes:
      - celery-data:/uploads/
    networks:
      - web_network
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  db:
  celery-data:


networks:
  web_network:
    name: web_network
